[{"C:\\React Projects\\smartape\\src\\index.js":"1","C:\\React Projects\\smartape\\src\\App.js":"2","C:\\React Projects\\smartape\\src\\reportWebVitals.js":"3","C:\\React Projects\\smartape\\src\\User.js":"4","C:\\React Projects\\smartape\\src\\Routes.js":"5","C:\\React Projects\\smartape\\src\\history.js":"6","C:\\React Projects\\smartape\\src\\UserList.js":"7","C:\\React Projects\\smartape\\src\\toDoList.js":"8"},{"size":1152,"mtime":1608660502177,"results":"9","hashOfConfig":"10"},{"size":192,"mtime":1608665344164,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3651,"mtime":1608752889890,"results":"13","hashOfConfig":"10"},{"size":550,"mtime":1608667804249,"results":"14","hashOfConfig":"10"},{"size":86,"mtime":1608660502144,"results":"15","hashOfConfig":"10"},{"size":2660,"mtime":1608803995424,"results":"16","hashOfConfig":"10"},{"size":4717,"mtime":1608803995424,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1aio43v",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\React Projects\\smartape\\src\\index.js",[],["36","37"],"C:\\React Projects\\smartape\\src\\App.js",[],"C:\\React Projects\\smartape\\src\\reportWebVitals.js",[],"C:\\React Projects\\smartape\\src\\User.js",["38"],"C:\\React Projects\\smartape\\src\\Routes.js",[],"C:\\React Projects\\smartape\\src\\history.js",[],"C:\\React Projects\\smartape\\src\\UserList.js",["39","40"],"C:\\React Projects\\smartape\\src\\toDoList.js",["41","42","43","44","45","46","47","48","49"],"import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useQuery, gql, useMutation } from '@apollo/client';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst boxGap = {\r\n  flex: \"0 0 auto\",\r\n  color: \"rgba(0, 0, 0)\",\r\n  margin: \"0px -17px 0px -34px\",\r\n  padding: \"12px 0px 12px 0px\",\r\n  overflow: \"visible\",\r\n  fontSize: \"1.5rem\",\r\n  textAlign: \"center\",\r\n  transition: \"background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\r\n  borderRadius: \"50\"\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst query_todos = gql`\r\nquery USER($id: ID!){\r\n  user(id: $id) {\r\n    id\r\n      address {\r\n        street\r\n      }\r\n    todos {\r\n      data {\r\n        title\r\n      }\r\n    }\r\n  }\r\n}  \r\n`;\r\n\r\nconst mutationAddToDo = gql`\r\nmutation createTodo($input : CreateTodoInput!) {\r\n  createTodo(input: $input) {\r\n    title\r\n  }\r\n}\r\n`;\r\n\r\n\r\nconst mutationUpdate = gql`\r\nmutation updateTodo($id: ID!, $input : UpdateTodoInput!) {\r\n  updateTodo(id: $id, input: $input) {\r\n    title\r\n  }\r\n}\r\n`;\r\n\r\nconst mutationDelete= gql`\r\nmutation deleteTodo($id: ID!) {\r\n  deleteTodo(id: $id) \r\n}\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport default function CheckboxListSecondary(props) {\r\n  const id =props.id;\r\n  console.log(props.id);\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([1]);\r\n  const [message, setMessage] = useState( '' );\r\n  const [title, setTitle] = useState( '' );\r\n  const [updateTitle, setUpdateTitle] = useState( '' );\r\n  const [deleteTitle, setDeleteTitle] = useState( id );\r\n\r\n  const [completed, setComplete] = useState( false );\r\n  const input = {\r\n    title, completed\r\n  }\r\n  const updateInput = {\r\n    updateTitle, completed\r\n  }\r\n\r\n  const [createTodo] = useMutation(mutationAddToDo, {\r\n    variables: {input}, refetchQueries: [{query: query_todos,\r\n      variables: {id}\r\n    }]\r\n  });\r\n\r\n\r\n  const [updateTodo] = useMutation(mutationUpdate, {\r\n    variables: {id, input}, refetchQueries: [{query: query_todos,\r\n      variables: {id}\r\n    }]\r\n  });\r\n\r\n  \r\n  const [deleteTodo, {error}] = useMutation(mutationDelete, {\r\n    variables: {id}, refetchQueries: [{query: query_todos,\r\n      variables: {id}\r\n    }]\r\n  });\r\n\r\n  const { loading,  data } = useQuery(query_todos, {\r\n    variables: { id },\r\n  });\r\n  console.log(title);\r\n  console.log(error);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n\r\n  return (\r\n\r\n    <List dense className={classes.root}>\r\n    <ListItem key={1} button>\r\n    \r\n     \r\n      <form  noValidate autoComplete=\"off\">\r\n      <TextField\r\n         type=\"text\"\r\n         value={title}\r\n         placeholder=\"Add toDo\"\r\n         onChange={e => setTitle(e.target.value)}/>\r\n      \r\n    </form>\r\n    <IconButton\r\n       onClick={ createTodo }\r\n       style= {boxGap} color=\"primary\" aria-label=\"todoplus\" component=\"span\">\r\n              <ControlPointIcon />\r\n            </IconButton>\r\n      </ListItem>\r\n      {   data.user.todos.data.map((item, index) => {\r\n        const labelId = `checkbox-list-secondary-label-${item.id}`;\r\n        return (\r\n          \r\n          <ListItem key={item.id} button>\r\n           \r\n            <ListItemText id={labelId} primary={item.title} />\r\n            <ListItemSecondaryAction>\r\n            <IconButton\r\n              onClick={\r\n                updateTodo\r\n                \r\n               }\r\n               value={updateTitle}\r\n               onChange={e => setUpdateTitle(e.target.value)} \r\n            style= {boxGap} color=\"primary\" aria-label=\"todoplus\" component=\"span\">\r\n              <HighlightOffIcon/>\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={\r\n                deleteTodo\r\n                \r\n               }\r\n               value={deleteTitle}\r\n               onChange={e => setDeleteTitle(e.target.value)}\r\n               style= {boxGap} color=\"primary\" aria-label=\"todoplus\" component=\"span\">\r\n              <CheckCircleOutlineIcon/>\r\n            </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":51,"column":11,"nodeType":"56","messageId":"57","endLine":51,"endColumn":18},{"ruleId":"54","severity":1,"message":"58","line":5,"column":8,"nodeType":"56","messageId":"57","endLine":5,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":106,"column":3,"nodeType":"61","messageId":"62","endLine":106,"endColumn":21},{"ruleId":"54","severity":1,"message":"63","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":22},{"ruleId":"54","severity":1,"message":"64","line":8,"column":8,"nodeType":"56","messageId":"57","endLine":8,"endColumn":16},{"ruleId":"54","severity":1,"message":"65","line":14,"column":8,"nodeType":"56","messageId":"57","endLine":14,"endColumn":19},{"ruleId":"54","severity":1,"message":"66","line":85,"column":10,"nodeType":"56","messageId":"57","endLine":85,"endColumn":17},{"ruleId":"54","severity":1,"message":"67","line":85,"column":19,"nodeType":"56","messageId":"57","endLine":85,"endColumn":29},{"ruleId":"54","severity":1,"message":"68","line":86,"column":10,"nodeType":"56","messageId":"57","endLine":86,"endColumn":17},{"ruleId":"54","severity":1,"message":"69","line":86,"column":19,"nodeType":"56","messageId":"57","endLine":86,"endColumn":29},{"ruleId":"54","severity":1,"message":"70","line":91,"column":21,"nodeType":"56","messageId":"57","endLine":91,"endColumn":32},{"ruleId":"54","severity":1,"message":"71","line":95,"column":9,"nodeType":"56","messageId":"57","endLine":95,"endColumn":20},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'mystyle' is assigned a value but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'ListItemAvatar' is defined but never used.","'Checkbox' is defined but never used.","'FilledInput' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'setComplete' is assigned a value but never used.","'updateInput' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]